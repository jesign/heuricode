{"version":3,"sources":["multiplayerController.js","globalController.js","userController.js","navController.js","codeController.js","problemController.js","resultController.js","badgeController.js","statprogController.js"],"names":[],"mappingsnbA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACxCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACjnvzSA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;ACdfile":"controllers.js","sourcesContent":["myApp.controller(\"multiplayerController\",[\"$scope\", \"$state\",\n\t\"$firebaseArray\", \"userModel\", \"rankService\", \"problemModel\", \"codingService\",\n\tfunction($scope, $state, $firebaseArray, userModel, rankService, \n\t\tproblemModel, codingService) {\n\t\t\n\t\tvar refMessages = firebase.database().ref().child(\"messages\");\n\t\tvar refPlayer = firebase.database().ref().child(\"players\");\n\t\tvar refRoom = firebase.database().ref().child(\"rooms\");\n\t\tvar refTimer = firebase.database().ref().child(\"timers\");\n\t\t// create a synchronized array\n\t  \t$scope.messages = $firebaseArray(refMessages);\n\t  \t$scope.players = $firebaseArray(refPlayer);\n\t\t$scope.rooms = $firebaseArray(refRoom);\n\t\t$scope.timers = $firebaseArray(refTimer);\n\t\t\n\t  \t// Global Variable\n\t  \tvar roomKey = 0;\n\t\tvar playerKey = 0;\n\t\tvar userId = 0;\n\t  \tvar p1_id = 0;\n\t  \tvar p2_id = 0;\n\t  \tvar problemCode = null;\n\t  \tvar leaveState = false;\n\n\t\t$scope.hasRoom = false;\n\t\t$scope.hasOpponent = false;\n\t\t$scope.p1_btn = \"disabled\";\n\t\t$scope.p2_btn = \"disabled\";\n\t\t$scope.p1_name = 0;\n\t\t$scope.p2_name = 0;\n\t  \t$scope.roomIndex = null;\n\t\t$scope.timerIndex = null;\n\t\t$scope.enableFindMatch = false;\n\t\t$scope.loadingFind = true;\n\t\t$scope.startTimer = false;\n\t\t\t\t\n\t\t$scope.roomDetails = \"\";\n\t\t$scope.loadProblemSuccess = false;\n\n\t\tuserModel.getBattleRecords()\n\t\t\t.success(function(response){\n\t\t\t\t$scope.winsCount = response.wins;\n\t\t\t\t$scope.loseCount = response.lose;\n\t\t\t\t$scope.solvedCount = response.solved;\n\t\t\t});\n\n\t\tfunction setProblem(){\n\t\t\tproblemModel.getProblem(problemCode)\n\t\t\t\t\t.success(function(response){\n\t\t\t\t\t\t$scope.loadProblemSuccess = false;\n\t\t\t\t\t\tcodingService.setProblemDescription(response.body);\n\t\t\t\t\t\t$scope.problemDescription = response.body;\n\t\t\t\t\t})\n\t\t\t\t\t. error(function(response){\n\t\t\t\t\t\t$scope.loadProblemSuccess = false;\n\t\t\t\t\t\t$scope.problemTitle = \"Failed to load problem.\";\n\t\t\t\t\t\tsetProblem();j\n\t\t\t\t\t});\n\t\t\tproblemModel.getProblemDetails(problemCode, 'multiplayer')\n\t\t\t\t\t.success(function(response){\n\t\t\t\t\t\tcodingService.setTimeLimit(response.time_limit);\n\t\t\t\t\t\tvar time = response.time_limit;\n\t\t\t\t\t\tvar hr = parseInt((time / 60) / 60, 10);\n\t\t\t\t\t\tvar min = parseInt((time / 60) % 60, 10);\n\t\t\t\t\t\tvar sec = parseInt(time % 60, 10);\n\t\t\t\t\t\t\n\t\t\t\t\t\t$scope.difficulty = response.difficulty;\n\t\t\t\t\t\t$scope.time_limit = hr + \"hr/s and \" + min + \"min/s\"\n\t\t\t\t\t});\n\t\t}\n\n\t  \t/* player1 creating a room - Step 1*/\n\t\tfunction createRoom(){\n\t\t\tconsole.log(\"creating room\");\n\t\t\t$scope.rooms.$add({\n\t\t\t\tplayer1: userId,\n\t\t\t\tplayer2: 0,\n\t\t\t\tproblemCode: null,\n\t\t\t\tready1: false,\n\t\t\t\tready2: false,\n\t\t\t\tlang1: \"not set\",\n\t\t\t\tlang2: \"not set\", \n\t\t\t\ttime: 5,\n\t\t\t\tstatus: 0,\n\t\t\t\twinner: 0,\n\t\t\t\tgiveup: 0\n\t\t\t}) .then(function(ref){\n\t\t\t\tp1_id = userId;\n\t\t\t\troomKey = ref.key;\n\n\t\t\t\t$scope.roomIndex = $scope.rooms.$indexFor(roomKey);\n\t\t\t\t$scope.hasRoom = true;\n\n\t\t\t\tcheckOpponent();\n\t\t\t\tconsole.log(\"Room has created\");\n\n\t\t\t\tuserModel.getPlayerDetails(userId)\n\t\t\t\t.success(function(response){\n\t\t\t\t\t$scope.p1_name = response;\n\t\t\t\t});\n\t\t\t});\n\t\t}\n\t\t/*player1 checking for opponent - Step 2*/\n\t\tfunction checkOpponent(){\n\t  \t\tvar r = $scope.rooms.$getRecord(roomKey);\n\t  \t\tif(!r.player2){\n\t  \t\t\t$scope.roomDetails = \"Waiting for an Opponent...\";\n\t  \t\t\tconsole.log('waiting for Opponent...');\n\t  \t\t\tsetTimeout(checkOpponent, 1000);\n\t  \t\t\treturn;\n\t  \t\t}\n\n\t  \t\tp2_id = r.player2;\n\n\t  \t\t$scope.$apply(function(){\n\t  \t\t\tuserModel.getPlayerDetails(r.player2)\n\t  \t\t\t.success(function(response){\n\t  \t\t\t\tcodingService.setOpponentName(response);\n\t  \t\t\t\t$scope.p2_name = response;\n\t  \t\t\t\t$scope.p1_btn = \"active\";\n\t  \t\t\t\n\t  \t\t\t\tgetProblem();\t\n\t  \t\t\t});\n\t        });\n\t  \t\treturn;\n\t  \t}\n\t  \t/* player1 get problem for both players*/\n\t  \tfunction getProblem(){\n\t\t\tproblemModel.getPlayersProblem(p1_id, p2_id)\n\t\t\t.success(function(response){\n\t\t\t\tconsole.log(response);\n\t\t\t\t\n\t\t\t\tproblemCode = response;\n\t\t\t\tcodingService.setProblemCode(response)\n  \t\t\t\tsetProblem();\n\n\t\t\t\tvar r = $scope.rooms.$getRecord(roomKey);\n\t\t\t\tr.problemCode = response;\n\t\t\t\tr.status = 1;\n\t\t\t\t$scope.rooms.$save(r).then(function(){\n\t\t\t\t\t$scope.hasOpponent = true;\n\t\t\t\t\t$scope.roomDetails = \"Waiting for Players to get ready ...\";\n\t  \t\t\t\twaitPlayerReady();\n\t  \t\t\t\tconsole.log(\"waiting for players\");\n\t  \t\t\t});\n\t\t\t})\n\t\t\t.error(function(){\n\t\t\t\t$scope.alert_title = \"Oops!\";\n\t\t\t\t$scope.alert_description = \"There was an error fetching a problem. Please refresh the page..\";\n\t\t\t\t$('#alertModal').openModal();\n\t\t\t});\n\t  \t}\n\n\t  \t/* player1 wait for players to get ready - Step 4*/\n\t  \tfunction waitPlayerReady(){\n\t  \t\tvar r = $scope.rooms.$getRecord(roomKey);\n\n\t  \t\tif(!r.ready1 || !r.ready2){\n\n\t  \t\t\tsetTimeout(waitPlayerReady, 1000);\n\t  \t\t\treturn;\n\t  \t\t}\n\n\t  \t\t$scope.startTimer = true;\n  \t\t\tstartTimer();\n\t  \t\treturn;\n\t  \t}\n\n\t  \t/* player1 start the timer and set\n\t\t\tto 2 after 5 seconds \t\t\t- Step 5a */ \n\n\t  \tfunction startTimer(){\n\t  \t\tvar r = $scope.rooms.$getRecord(roomKey);\n\n\t  \t\tif(r.time != 0){\n\t\t  \t\tr.time = r.time - 1;\n\n\t  \t\t\t$scope.rooms.$save(r);\n\n\t  \t\t\tsetTimeout(startTimer, 1000);\n\t  \t\t\treturn;\n\t  \t\t}\n\n  \t\t\tr.status = 2;\n  \t\t\t$scope.rooms.$save(r);\n\t\t\tleaveState = true;\n\t\t\tcodingService.setIsEnableCode(true);\n\t\t\tcodingService.setIsMultiplayer(true);\n\t\t\tcodingService.setRoomKey(roomKey);\n\t\t\t$state.go('codingPage');\n  \t\t\treturn;\n\t  \t}\n\n\t\t/* player2 wait for the room status to turn to 1 - Step 2*/\n\t\tfunction waitRoomReady(){\n\t\t\t$scope.roomDetails = \"Waiting for Room to get Ready... \";\n\n\t\t\tvar r = $scope.rooms.$getRecord(roomKey);\n\n\t\t\tif(r.status == 0){\n\t\t\t\tconsole.log(\"waiting for room to get ready\");\n\t\t\t\tsetTimeout(waitRoomReady, 1000);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tproblemCode = r.problemCode;\n\t\t\tconsole.log(\"room available\");\n\t\t\tcodingService.setProblemCode(problemCode);\n\t\t\tsetProblem();\n\t\t\t$scope.$apply(function(){\n\t\t\t\t$scope.hasOpponent = true;\n\t\t\t});\n\n\t\t\twaitGameStart();\n\t\t\treturn;\n\t\t}\n\n\t\t/* player 2 wait for the game to start\n\t  \t\tor wait for the room status to turn to 2 - Step 3*/\n\t\tfunction waitGameStart(){\n\t\t\t$scope.roomDetails = \"Waiting for Players to get ready ...\";\n\t\t\tvar r = $scope.rooms.$getRecord(roomKey);\n\n\t\t\tif(r.ready1 && r.ready2){\n\t\t\t\t$scope.startTimer = true;\n\t  \t\t}\n\n\t\t\tif(r.status != 2){\n\t\t\t\tsetTimeout(waitGameStart, 1000);\n\t\t\t\treturn;\n\t\t\t}\t\n\t\t\t\n\t\t\tleaveState = true;\n\t\t\t\n\t\t\tcodingService.setIsEnableCode(true);\n\t\t\tcodingService.setIsMultiplayer(true);\n\t\t\tcodingService.setRoomKey(roomKey);\n\t\t\t$state.go('codingPage');\t\n\t\t\treturn;\n\t\t}\n\n\t\t$scope.findMatch = function(){\n\t\t\t$scope.enableFindMatch = false;\n\t\t\tuserModel.checkVacantRoom($scope.rooms)\n\t\t\t\t\t\t.then(function(response){\n\t\t\t\t\t\t\troomKey = response.roomKey;\n\t\t\t\t\t\t\t$scope.roomIndex = $scope.rooms.$indexFor(roomKey);\n\t\t\t\t\t\t\tconsole.log(\"Got a Room: \" + response.roomKey)\n\t\t\t\t\t\t\tvar edit = $scope.rooms.$getRecord(response.roomKey);\n\n\t\t\t\t\t\t\tedit.player2 = userId;\n\t\t\t\t\t\t\t// edit.subject = response.subject;\n\t\t\t\t\t\t\tp1_id = edit.player1;\n\t\t\t\t\t\t\tp2_id = userId;\n\n\t\t\t\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t\t\t\t\tif($scope.hasOpponent == false){\n\t\t\t\t\t\t\t\t\t\t$scope.alert_title = \"Oops!\";\n\t\t\t\t\t\t\t\t\t\t$scope.alert_description = \"The rooom has expired.. please refresh the page..\";\n\t\t\t\t\t\t\t\t\t\t$('#alertModal').openModal();\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}, 10000);\n\n\t\t\t\t\t\t\t/* player 2 joined a room - Step 1*/\n\t\t\t\t\t\t\t$scope.rooms.$save(edit).then(function(ref){\n\t\t\t\t\t\t\t\tconsole.log('You have joined a room');\n\t\t\t\t\t\t\t\t$scope.hasRoom = true;\n\t\t\t\t\t\t\t\twaitRoomReady();\n\n\t\t\t\t\t\t\t\tvar r = $scope.rooms.$getRecord(ref.key);\n\n\t\t\t\t\t\t\t\tuserModel.getPlayerDetails(r.player1)\n\t\t\t\t\t\t\t\t.success(function(response){\n\t\t\t\t\t\t\t\t\tconsole.log(response);\n\t\t\t\t\t\t\t\t\t$scope.p1_name = response;\n\t\t\t\t\t\t\t\t\tcodingService.setOpponentName(response);\n\t\t\t\t\t\t\t\t});\t\t\t\n\n\t\t\t\t\t\t\t\tuserModel.getPlayerDetails(userId)\n\t\t\t\t\t\t\t\t.success(function(response){\n\t\t\t\t\t\t\t\t\tconsole.log(response);\n\t\t\t\t\t\t\t\t\t$scope.p2_name = response;\n\t\t\t\t\t\t\t\t});\t\t\t\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t$scope.p2_btn = \"active\";\n\t\t\t\t\t\t\t});\t\t\n\t\t\t\t\t\t})\n\t\t\t\t\t\t.catch(function(response){\n\t\t\t\t\t\t\tconsole.log(\"No room yet.\")\n\t\t\t\t\t\t\tcreateRoom();\n\t\t\t\t\t\t});\n\t\t}\n\t\t/* load authenticated user and check for vancant room.*/\n\t\tuserModel.getUserId()\n\t\t\t.success(function(response){\n\t\t\t\tuserId = response;\n\t\t\t\t$scope.rooms.$loaded() \n\t\t\t\t.then(function(room){\n\t\t\t\t/* look for vacant room*/\n\t\t\t\t\t$scope.loadingFind = false;\n\t\t\t\t\t$scope.enableFindMatch = true;\n\t\t\t\t});\t\t\n\t\t\t});\n\n\t\t$scope.ready1 = function(){\n\t\t\tif(p1_id == userId){\n\t\t\t\tvar edit = $scope.rooms.$getRecord(roomKey);\n\t\t\t\tif(edit.lang1 != \"not set\"){\n\t\t\t\t\tedit.ready1 = true;\n\t\t\t\t\t$scope.rooms.$save(edit).then(function(){\n\t\t\t\t\t\tconsole.log(\"player1 is ready\");\n\t\t\t\t\t});\t\t\t\t\n\t\t\t\t}else{\n\t\t\t\t\t$scope.alert_title = \"Oops!\";\n\t\t\t\t\t$scope.alert_description = \"Language not set.\";\n\t\t\t\t\t$('#alertModal').openModal();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/* Ready buttons */\n\t\t$scope.ready2 = function(){\n\t\t\tif(p2_id == userId){\n\t\t\t\tvar edit = $scope.rooms.$getRecord(roomKey);\n\t\t\t\tif(edit.lang2 != \"not set\"){\n\t\t\t\t\tedit.ready2 = true;\n\t\t\t\t\t$scope.rooms.$save(edit).then(function(){\n\t\t\t\t\t\tconsole.log(\"player2 is ready\");\t\t\t\t\n\t\t\t\t\t});\n\t\t\t\t}else {\n\t\t\t\t\t$scope.alert_title = \"Oops!\";\n\t\t\t\t\t$scope.alert_description = \"Language not set.\";\n\t\t\t\t\t$('#alertModal').openModal();\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t/* Player1 dropdown button - choose language */\n\t\t$scope.p1_switchLanguage = function(l_code){\n\t\t\tif(p1_id == userId){\n\t\t\t\tvar edit = $scope.rooms.$getRecord(roomKey);\n\t\t\t\tif(l_code == 11){\n\t\t\t\t\tedit.lang1 = \"C\";\n\t\t\t\t} else if(l_code == 1){\n\t\t\t\t\tedit.lang1 = \"C++\";\n\t\t\t\t} else if(l_code == 10){\n\t\t\t\t\tedit.lang1 = \"Java\";\n\t\t\t\t}\n\n\t\t\t\tcodingService.setLanguage(l_code);\n\n\t\t\t\t$scope.rooms.$save(edit).then(function(){\n\t\t\t\t\tconsole.log(\"player2 is ready\");\t\t\t\t\n\t\t\t\t});\n\t\t\t}else{\n\t\t\t\t$scope.alert_title = \"Oops!\";\n\t\t\t\t$scope.alert_description = \"you cannot set language from other player.\";\n\t\t\t\t$('#alertModal').openModal();\n\t\t\t}\n\t\t\t\n\t\t}\n\t\t/* Player2 dropdown button - choose language */\n\t\t$scope.p2_switchLanguage = function(l_code){\n\t\t\tif(p2_id == userId){\n\t\t\t\tvar edit = $scope.rooms.$getRecord(roomKey);\n\t\t\t\tif(l_code == 11){\n\t\t\t\t\tedit.lang2 = \"C\";\n\t\t\t\t} else if(l_code == 1){\n\t\t\t\t\tedit.lang2 = \"C++\";\n\t\t\t\t} else if(l_code == 10){\n\t\t\t\t\tedit.lang2 = \"Java\";\n\t\t\t\t}\n\n\t\t\t\tcodingService.setLanguage(l_code);\n\n\t\t\t\t$scope.rooms.$save(edit).then(function(){\n\t\t\t\t\tconsole.log(\"player2 is ready\");\t\t\t\t\n\t\t\t\t});\n\t\t\t}else{\n\t\t\t\t$scope.alert_title = \"Oops!\";\n\t\t\t\t$scope.alert_description = \"you cannot set language from other player.\";\n\t\t\t\t$('#alertModal').openModal();\n\t\t\t}\n\t\t}\n\n\t  \t$scope.addMessage = function() {\n\t\t    $scope.messages.$add({\n\t\t      text: $scope.newMessageText\n\t\t    });\n\t  \t}\n\n\t  \tvar is_able = true;\n\n\t  \t$scope.$on('$stateChangeStart', function( event ) {\n\t  \t\tis_able = false;\t\n\t\t    \n\t\t    if(!leaveState){\n\t\t\t    if(roomKey){\n\t\t\t\t\t$scope.rooms.$remove($scope.rooms.$indexFor(roomKey))\n\t\t\t\t\t.then(function(ref){\n\t\t\t\t\t\tconsole.log(\"Room was deleted\");\n\t\t\t\t\t});\n\t  \t\t\t}\n\t\t    }\n\t\t});\n\n\t\twindow.onbeforeunload = function() { \n\t  \t\tif(is_able){\n\t\t\t      if(confirm('are you sure to exit?')) {\n           \t\t\treturn true; \n\t\t\t      }\n\t\t\t      else {\n\t\t\t        return false; \n\t\t\t      }\n\t\t  \t}\n\t\t};\t  \t\t\n\n\t\t$(window).on('unload', function(e) {\n  \t\t\tif(roomKey && !leaveState){\n\t\t\t\t$scope.rooms.$remove($scope.rooms.$indexFor(roomKey))\n\t\t\t\t.then(function(ref){\n\t\t\t\t\tconsole.log(\"Room was deleted\");\n\t\t\t\t});\n  \t\t\t}\n\t\t});\n\t\t\n}]); \n\n/*\n\tRoom status\n\t\t0 = waiting for player2\n\t\t1 = waiting for player1 respond\n\t\t2 = game has started\n\t\t3 = game finished\n\n\n*/","myApp.controller('globalController', ['$scope', 'userModel', 'problemModel', 'rankService',\n\tfunction($scope, userModel, problemModel, rankService){\n\n\t\tangular.extend($scope,{\n\t\t\trankSCS: null,\n\t\t\trankRCS: null,\n\t\t\trankARR: null,\n\t\t\taverager: false\n\t\t});\n\t\t\n\t\tangular.extend($scope,{\n\t\t\tsetRank: function(){\n\t\t\t\tproblemModel.getWeaknessRank(1)\n\t\t\t\t\t.success(function(response){\n\t\t\t\t\t\t$scope.rankSCS = response[0];\n\t\t\t\t\t\t$scope.rankRCS = response[1];\n\t\t\t\t\t\t$scope.rankARR = response[2];\n\t\t\t\t\t\t\n\t\t\t\t\t\trankService.setRankSCS(response[0]);\n\t\t\t\t\t\trankService.setRankRCS(response[1]);\n\t\t\t\t\t\trankService.setRankARR(response[2]);\n\n\t\t\t\t\t\tif($scope.rankSCS >= 11 && $scope.rankRCS >= 11){\n\t\t\t\t\t\t\t$scope.averager = true;\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t$scope.averager = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tconsole.log($scope.rankSCS + \" \" + $scope.rankRCS + \" \" + $scope.rankARR);\n\t\t\t\t\t});\n\t\t\t}\n\t\t});\n\n\t\tuserModel.checkAuth()\n\t\t\t.success(function(response){\n\t\t\t\tif(response == 1){\n\t\t\t\t\t$scope.setRank();\t\n\t\t\t\t}\n\t\t\t});\n\n\t}]);\n","myApp.controller('userController', ['$scope', \n\tfunction($scope){\n\t\t// var myCodeMirror = CodeMirror.fromTextArea(myTextArea, {theme: \"material\",lineNumbers: true,});\n\t\t//function\n\t\tconsole.log('hellow');\n\t\t\n\t\t\n\t\t\n\n\t\tangular.extend($scope, {\n\t\t\ttest: function(){\n\t\t\t\t// console.log(myCodeMirror.getValue());\n\t\t\t},\n\t\t});\n\n\t\tvar ctx = document.getElementById(\"myChart\");\n\n\t\tvar myChart = new Chart(ctx, {\n\t\t    type: 'bar',\n\t\t    data: {\n\t\t        labels: [\"Missing Semicolon\", \"Scoping Error\", \"Parenthesis Matching\", \"Identifier Error\"],\n\t\t        datasets: [{\n\t\t            label: '# of Errors',\n\t\t            data: [5,7,4, 6],\n\t\t            backgroundColor: ['#2962ff', '#00bfa5', '#ff6d00', '#ffd600']\n\t\t        }]\n\t\t    },\n\t\t    options: {\n\t\t        scales: {\n\t\t            yAxes: [{\n\t\t                ticks: {\n\t\t                    beginAtZero:true,\n\t\t                    max: 40\n\t\t                }\n\t\t            }]\n\t\t        },\n\t\t        responsive: false,\n\t\t        legend:{\n\t\t        \tdisplay: false\n\t\t        },\n\t\t        title: {\n\t\t            display: true,\n\t\t            text: 'Error Frequencies',\n\t\t            fontSize: 20 \n\t\t        }\n\t\t    }\n\t\t});\n\n\n\t}]);","myApp.controller('navController', ['$scope', '$rootScope',\n\tfunction($scope, $rootScope){\n\n\t\t$(\".button-collapse\").sideNav({\n\t\t\tmenuWidth: 300, // Default is 240\n\t\t\tedge: 'right',\n\t      \tcloseOnClick: true // Closes side-nav on <a> clicks, useful for Angular/Meteor\n\t\t});\n\t}]);\n","myApp.controller('codeController', ['$scope','$rootScope', \n\t\t'codeModel', 'problemModel', 'codingService', '$state',\n\t\t'errorService', 'rankService', 'userModel', '$firebaseArray',\n\tfunction($scope,$rootScope, codeModel, problemModel, codingService,\n\t\t$state, errorService, rankService, userModel, $firebaseArray){\n\n\t\tvar compiler_token = \"0cbe4211ffadf976d70940ca79722da6\";\n\n\t\tvar myCodeMirror = CodeMirror.fromTextArea(myTextArea, {theme: \"material\", lineNumbers: true,});\n\n\t\tvar opponent_id;\t\n\t\t// global variables\n\t\tvar g_languageId = null,\n\t\t\tg_statusId = null,\n\t\t\tg_submitId = null,\n\t\t\tg_array_errors = [],\n\t\t\tround = 0, \n\t\t\troomKey = null,\n\t\t\tuserId = 0,\n\t\t\tleaveState = false,\n\t\t\tisLose = false,\n\t\t\thasNewWeakness = false,\n\t\t\twrongAnswer = 0,\n\t\t\trank1 = 0,\n\t\t\trank2 = 0,\n\t\t\trank3 = 0,\n\t\t\tbattle_id = 0,\n\t\t\tisMulti = false;\n\t\t// scoped variables\n\t\tangular.extend($scope, {\n\t\t\tnewCode: {\n\t\t\t\tcodes: null,\n\t\t\t\tinput: null\n\t\t\t}, \n\t\t\terror: null,\n\t\t\tshowOutput: false,\n\t\t\tshowProblem: true,\n\t\t\tcompiling: true,\n\t\t\tresult: null,\n\t\t\tresultValue: null,\n\t\t\ttime: null,\n\t\t\tmemory: null,\n\t\t\tsignal: null,\n\n\t\t\tproblemCode: null,\n\t\t\tproblemTitle: null,\n\t\t\tproblemDescription: null,\n\t\t\tisCorrect : false,\n\t\t\t\n\t\t\tsubmitCodeId: null,\n\t\t\tsubmitStatusDescription: null,\n\t\t\tcheckingResult: false,\n\t\t\tresultSubmissionColor: null,\n\t\t\t\n\t\t\tisMultiplayer:false,\n\t\t\t\n\t\t\t/* alerts */\n\t\t\talert_title: null,\n\t\t\talert_description: null,\n\t\t\tclosableModal: false\n\n\t\t}); \t\n\t\t// functions\n\t\tangular.extend($scope, {\n\t\t\t/* Results value or details */\n\t\t\tgetResultValue: function(id){\n\t\t\t\tswitch(id){\n\t\t\t\t\tcase 11: \n\t\t\t\t\t\treturn \"Compilation Error\";\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase 12:\n\t\t\t\t\t\treturn \"Runtime Error\";\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase 13:\n\t\t\t\t\t\treturn \"Time limit Exceeded\";\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase 15: \n\t\t\t\t\t\treturn \"Success\";\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase 17: \n\t\t\t\t\t\treturn \"Memory Limit Exceeded\";\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase 19:\n\t\t\t\t\t\treturn \"Illegal System Call\";\n\t\t\t\t\tbreak;\n\t\t\t\t\tcase 20:\n\t\t\t\t\t\treturn \"Internal Error\";\n\t\t\t\t\tbreak;\n\t\t\t\t\tdefault: \n\t\t\t\t\t\treturn 0;\n\t\t\t\t}\n\t\t\t},\n\n\t\t\t/* Getting Submission Status will loop until status_id is = 0*/\n\t\t\tgetSubmissionStatus: function(id){\t\t\n\t\t\t\t$('ul.tabs').tabs('select_tab', 'output');\t\t\n\t\t\t\t// $('.nav-tabs a[href=\"#output\"]').tab('show');\n\t\t\t\t/* request to API the status_id of submission */\n\t\t\t\tcodeModel.submissionStatusModel(id, compiler_token).then(function(response){\n\t\t\t\t\t$scope.output = \"\";\n\t\t\t\t\t$scope.error = \"\";\n\n\t\t\t\t\t$scope.showOutput = true;\n\t\t\t\t\tconsole.log(response);\n\t\t\t\t\t$scope.showProblem = true;\n\t\t\t\t\tvar status_id = response.status;\n\t\t\t\t\tconsole.log(status_id);\n\n\t\t  \t\t\tif(status_id != 0){\n\t\t  \t\t\t\t$scope.compiling = true;\n\t\t  \t\t\t\tif(status_id < 0)\n\t\t  \t\t\t\t\t$scope.status = \"Waiting for compilation...\";\n\t\t  \t\t\t\telse if(status_id == 1)\n\t\t  \t\t\t\t\t$scope.status = \"Compilation...\";\n\t\t  \t\t\t\telse if(status_id == 3)\n\t\t  \t\t\t\t\t$scope.status = \"Running...\";\n\t\t  \t\t\t\t$scope.getSubmissionStatus(g_submitId);\n\t\t  \t\t\t}else{\n\t\t  \t\t\t\t$scope.status = \"\";\n\t\t  \t\t\t\t$scope.compiling = false;\n\t\t  \t\t\t\t\n\t\t  \t\t\t\t$scope.time = response.time;\n\t\t  \t\t\t\t$scope.memory = response.memory;\n\t\t  \t\t\t\t$scope.signal - response.signal;\n\t\t  \t\t\t}\n\n\t\t  \t\t\t$scope.resultValue = $scope.getResultValue(response.result);\n\t\t  \t\t\tconsole.log(response.result);\n\t\t  \t\t\tconsole.log($scope.getResultValue(response.result));\n\t  \t\t\t\t\n\t\t  \t\t\tif(response.result == 15){\n\t\t  \t\t\t\t$scope.resultValueColor = \"resultValSuccess\";\n\t\t  \t\t\t\t$scope.output = response.output;\n\t\t  \t\t\t}else if(response.result == 12){\n\t\t  \t\t\t\t$scope.resultValueColor = \"resultValError\";\n\t\t  \t\t\t}else if(response.result == 11){\n\t\t  \t\t\t\t$scope.resultValueColor = \"resultValError\";\n\t\t  \t\t\t\t$scope.error = response.cmpinfo;\n\n\t\t  \t\t\t\tswitch(g_languageId){\n\t\t\t\t\t\t\tcase 1: //C++\n\t\t\t\t\t\t\t\tg_array_errors = $scope.error.split(\"prog.cpp:\");\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 11: // C\n\t\t\t\t\t\t\t\tg_array_errors = $scope.error.split(\"prog.c:\");\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 10: // Java\n\t\t\t\t\t\t\t\tg_array_errors = $scope.error.split(\"Main.java:\");\n\t\t\t\t\t\t\t\tbreak; \n\t\t\t\t\t\t}\n\n\t\t  \t\t\t\terrorService.setErrors(g_array_errors);\n\t\t  \t\t\t\t\n\t\t  \t\t\t\t$scope.getErrorsMS();\n\t\t\t\t\t\t$scope.getErrorsSE();\n\t\t\t\t\t\t$scope.getErrorsPM();\n\t\t\t\t\t\t$scope.getErrorsIE();\n\n\t\t\t\t\t\t\n\t\t  \t\t\t}else{\n\t\t  \t\t\t\t$scope.resultValueColor = \"resultValError\";\n\t\t  \t\t\t}\n\t  \t\t\t\n\n\t\t\t\t});\n\t\t\t},\n\t\t\trunCode: function(editorForm){\n\t\t\t\t/* Submit the code to API and get its status */\n\t\t\t\t$.ajax({\n\t\t\t\t  \ttype: \"POST\",\n\t\t\t\t  \turl: 'http://db4262da.compilers.sphere-engine.com/api/v3/submissions?access_token=' + compiler_token,\n\t\t\t\t  \tdata: \n\t\t\t\t  \t\t{\n\t\t\t\t \t\tsourceCode: myCodeMirror.getValue(),\n\t\t\t\t \t\tlanguage: g_languageId,\n\t\t\t\t \t\tinput: $scope.newCode.input\n\t\t\t\t \t},\n\t\t\t\t  \tsuccess: function(result, data){\n\t\t\t\t  \t\tvar obj = JSON.parse(result);\n\t\t\t\t\t  \tg_submitId = obj.id;\n\t\t\t\t  \t\tconsole.log(obj.id);\n\t\t  \t\t\t\t$scope.getSubmissionStatus(g_submitId);\n\t\t\t\t  \t}\n\t\t\t\t});\n\t\t\t},\n\t\t\ttestError: function(){\t\t\t\n\t\t\t\t$scope.getSubmissionStatus(47872263);\n\t\t\t},\n\t\t\ttestSuccess: function(){\n\t\t\t\t$scope.getSubmissionStatus(47900843);\n\t\t\t},\n\t\t\ttesting1: function(){\n\t\t\t\t$scope.isCorrect = true;\n\t\t\t\tcodingService.setSuccess(true);\n\n\t\t\t\tcodeModel.setRound(round)\n\t\t\t\t\t.success(function(){\n\t\t\t\t\t\tconsole.log('problem set to solve');\n\t\t\t\t\t});\n\t\t\t\t\t/* set to no weakness */\n\t\t\t\t\t\n\t\t\t\tproblemModel.setWeakness(0);\n\n\t\t\t\tcodeModel.saveErrors(errorService.getErrorCountMS(), errorService.getErrorCountSE(),\n\t\t\t\t\t\terrorService.getErrorCountPM(), errorService.getErrorCountIE(), \"single\" )\n\t\t\t\t\t\t.success(function(){\n\t\t\t\t\t\t\tconsole.log(\"Error counts are set.\");\n\t\t\t\t\t\t});\n\n\t\t\t\tvar weakness = codingService.getWeaknessId();\n\t\t\t\t\t\n\t\t\t\tcodeModel.rankUp(weakness)\n\t\t\t\t\t.success(function(response){\n\t\t\t\t\t\t$scope.setRank();\n\t\t\t\t\t\t$scope.updateRankProceed();\n\t\t\t\t\t});\n\t\t\t},\n\t\t\ttesting2: function(){\n\t\t\t\t$scope.isCorrect = true;\n\t\t\t\t\n\t\t\t\tcodingService.setSuccess(true);\n\t\t\t\t/* Multiplayer mode*/\n\t\t\t\tvar r = $scope.rooms.$getRecord(roomKey);\n\t\t\t\tvar opponent;\t\n\t\t\t\tif(r.player1 == userId){\n\t\t\t\t\topponent = r.player2;\n\t\t\t\t}else{\n\t\t\t\t\topponent = r.player1;\n\t\t\t\t}\n\n\t\t\t\tvar isWin;\n\t\t\t\t\n\t\t\t\tisWin = 0;\n\t\t\t\t$scope.winOrLoseMessage = \"You lose against player \" + opponent;\n\t\t\t\n\t\t\t\tcodeModel.setBattle(battle_id,1, isWin)\n\t\t\t\t\t.success(function(){\n\t\t\t\t\t\tconsole.log('problem set to solve in battle');\n\t\t\t\t\t});\n\n\t\t\t\tcodeModel.saveErrors(errorService.getErrorCountMS(), errorService.getErrorCountSE(),\n\t\t\t\t\t\terrorService.getErrorCountPM(), errorService.getErrorCountIE(), \"multiplayer\" )\n\t\t\t\t\t.success(function(){\n\t\t\t\t\t\tconsole.log(\"Error counts are set.\");\n\t\t\t\t\t});\n\n\t\t\t\t$scope.updateRankProceed();\n\n\t\t\t},\n\t\t\ttesting3: function(){\n\t\t\t\t$scope.getSubmissionStatus(47900843);\n\t\t\t},\n\t\t\tgetErrorsMS: function(){\n\t\t\t\tvar array_error = g_array_errors;\n\t\t\t\tvar number_of_errors = 0;\n\t\t\t\tswitch(g_languageId){\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tfor(i = 0; i < array_error.length; i ++){\n\t\t\t\t\t\t\tvar str = array_error[i];\n\t\t\t\t\t\t\t\tif(str.includes(\"expected ';' before\")){\n\t\t\t\t\t\t\t\t\tnumber_of_errors ++;\n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t}\n\t\t\t\t\t\terrorService.addErrorCountMS(number_of_errors);\t\t \n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 10:\n\n\t\t\t\t\t\t// ';' expected\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 11:\n\t\t\t\t}\n\t\t\t\t\n\t\t\t},\n\t\t\tgetErrorsSE: function(){\n\t\t\t\t\n\t\t\t\tvar array_error = g_array_errors;\n\t\t\t\tvar number_of_errors = 0;\n\n\t\t\t\tswitch(g_languageId){\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tfor(i = 0; i < array_error.length; i ++){\n\t\t\t\t\t\t\tvar str = array_error[i];\n\t\t\t\t\t\t\tif(str.includes(\"was not declared in this scope\")){\n\t\t\t\t\t\t\t\tnumber_of_errors ++;\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t}\n\t\t\t\t\t\terrorService.addErrorCountSE(number_of_errors);\t\t \n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 10:\n\t\t\t\t\t\t\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 11:\n\t\t\t\t}\n\t\t\t},\n\t\t\tgetErrorsPM: function(){\n\t\t\t\tvar array_error = g_array_errors;\n\t\t\t\tvar number_of_errors = 0;\n\n\t\t\t\tswitch(g_languageId){\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tfor(i = 0; i < array_error.length; i++){\n\t\t\t\t\t\t\tvar str = array_error[i];\n\t\t\t\t\t\t\tif(str.includes(\"expected ')'\")){\n\t\t\t\t\t\t\t\tnumber_of_errors ++;\n\t\t\t\t\t\t\t} else if(str.includes(\"expected ']'\")){\n\t\t\t\t\t\t\t\tnumber_of_errors ++;\n\t\t\t\t\t\t\t} else if(str.includes(\"expected '}'\")){\n\t\t\t\t\t\t\t\tnumber_of_errors ++;\n\t\t\t\t\t\t\t} else if(str.includes(\"expected '('\")){\n\t\t\t\t\t\t\t\tnumber_of_errors ++;\n\t\t\t\t\t\t\t} else if(str.includes(\"expected '{'\")){\n\t\t\t\t\t\t\t\tnumber_of_errors ++;\n\t\t\t\t\t\t\t}else if(str.includes(\"expected '['\")){\n\t\t\t\t\t\t\t\tnumber_of_errors ++;\n\t\t\t\t\t\t\t} \n\t\t\t\t\t\t}\n\t\t\t\t\t\terrorService.addErrorCountPM(number_of_errors);\t\t \n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 10:\n\t\t\t\t\t\tfor(i = 0; i < array_error.length; i++){\n\t\t\t\t\t\t\tvar str = array_error[i];\n\t\t\t\t\t\t\tif(str.includes(\"expected ')'\")){\n\t\t\t\t\t\t\t\tnumber_of_errors ++;\n\t\t\t\t\t\t\t} else if(str.includes(\"expected ']'\")){\n\t\t\t\t\t\t\t\tnumber_of_errors ++;\n\t\t\t\t\t\t\t} else if(str.includes(\"expected '}'\")){\n\t\t\t\t\t\t\t\tnumber_of_errors ++;\n\t\t\t\t\t\t\t} else if(str.includes(\"expected '('\")){\n\t\t\t\t\t\t\t\tnumber_of_errors ++;\n\t\t\t\t\t\t\t} else if(str.includes(\"expected '{'\")){\n\t\t\t\t\t\t\t\tnumber_of_errors ++;\n\t\t\t\t\t\t\t}else if(str.includes(\"expected '['\")){\n\t\t\t\t\t\t\t\tnumber_of_errors ++;\n\t\t\t\t\t\t\t} \t\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 11:\n\t\t\t\t}\t\t\t\t\t\n\t\t\t},\n\t\t\tgetErrorsIE: function(){\n\t\t\t\tvar array_error = g_array_errors;\n\t\t\t\tvar number_of_errors = 0;\n\t\t\t\tswitch(g_languageId){\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tfor(i = 0; i < array_error.length; i ++){\n\t\t\t\t\t\t\tvar str = array_error[i];\n\t\t\t\t\t\t\t\tif(str.includes(\"expected initializer\")){\n\t\t\t\t\t\t\t\t\tnumber_of_errors ++;\n\t\t\t\t\t\t\t\t} \n\t\t\t\t\t\t}\n\t\t\t\t\t\terrorService.addErrorCountIE(number_of_errors);\t\t \n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 10:\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 11:\n\t\t\t\t}\n\t\t\t},\n\t\t\tSubmitCode: function(){\n\t\t\t\t$('#submitCode').openModal({dismissible:false});\n\t\t\t\tvar problemCode = $scope.problemCode;\n\t\t\t\t$scope.submitStatusDescription = \"\";\n\n\t\t\t\tvar codeData = {\n\t\t\t\t\tproblemCode: problemCode,\n\t\t\t\t\tcompilerId: g_languageId,\n\t\t\t\t\tsource: myCodeMirror.getValue()\n\t\t\t\t}\n\t\t\t\tvar submissionId;\t\n\n\t\t\t\tproblemModel.getSubmissionId(codeData)\n\t\t\t\t\t.then(function(response){\n\t\t\t\t\t\t$scope.checkingResult = false;\n\t\t\t\t\t\t$scope.submitCodeId = response.data.submissionId;\n\t\t\t\t\t\t$scope.resultSubmissionColor = \"submission-running\";\n\t\t\t\t\t\t$scope.submitStatusDescription = \"\";\n\t\t\t\t\t\t$scope.testGetProblemDetails();\n\t\t\t\t\t})\n\t\t\t\t\t.catch(function(response){\n\t\t\t\t\t\t$scope.checkingResult = false;\n\t\t\t\t\t\t$scope.submitStatusDescription = \"Sorry submission failed. Please try again...\";\n\t\t\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t\t\t$('#submitCode').closeModal();\n\t\t\t\t\t\t}, 3000);\n\t\t\t\t\t});\n\t\t\t},\n\t\t\tcheckRankForWeakness: function(w){\n\t\t\t\tswitch(w){\n\t\t\t\t\tcase 1:\n\t\t\t\t\t\tif(rank1 >= 10){\n\t\t\t\t\t\t\tif(rank2 <= 10 || rank3 <= 10){\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else if(rank1 >= 25){\n\t\t\t\t\t\t\tif(rank2 <= 25 || rank3 <= 25){\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tif(rank2 <= 40 || rank3 <= 40){\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 2:\n\t\t\t\t\t\tif(rank2 >= 10){\n\t\t\t\t\t\t\tif(rank1 <= 10 || rank3 <= 10){\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else if(rank2 >= 25){\n\t\t\t\t\t\t\tif(rank1 <= 25 || rank3 <= 25){\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tif(rank1 <= 40 || rank3 <= 40){\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t\tcase 3:\n\t\t\t\t\t\tif(rank3 >= 10){\n\t\t\t\t\t\t\tif(rank1 <= 10 || rank2 <= 10){\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else if(rank3 >= 25){\n\t\t\t\t\t\t\tif(rank1 <= 25 || rank2 <= 25){\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\tif(rank1 <= 40 || rank2 <= 40){\n\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t\treturn false;\n\n\t\t\t},\n\t\t\ttestGetProblemDetails: function(){\n\t\t\t\t// $('#myModal').modal({ keyboard: false, backdrop: false, show: true })\n\t\t\t\t\n\t\t\t\tproblemModel.getSubmissionDetails($scope.submitCodeId)\n\t\t\t\t\t.success(function(response){\n\t\t\t\t\t\tconsole.log(response);\n\t\t\t\t\t\tvar status_id = response.status;\n\t\t\t\t\t\t$scope.submitStatusDescription = response.statusDescription;\n\t\t\t\t\t\tif(status_id < 9){\n\t\t\t\t\t\t\t$scope.testGetProblemDetails();\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t$scope.checkingResult = true;\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(status_id == 15){\n\t\t\t\t\t\t\t\t/* code accepted */\n\t\t\t\t\t\t\t\tif($scope.isMultiplayer){\n\t\t\t\t\t\t\t\t\t$scope.isCorrect = true;\n\t\t\t\t\t\t\t\t\t$scope.resultSubmissionColor = \"submission-accepted\";\n\t\t\t\t\t\t\t\t\t$scope.submitStatusDescription = \"Accepted!\";\n\t\t\t\t\t\t\t\t\tcodingService.setSuccess(true);\n\t\t\t\t\t\t\t\t\t/* Multiplayer mode*/\n\t\t\t\t\t\t\t\t\tvar r = $scope.rooms.$getRecord(roomKey);\n\t\t\t\t\t\t\t\t\tvar opponent;\t\n\t\t\t\t\t\t\t\t\tif(r.player1 == userId){\n\t\t\t\t\t\t\t\t\t\topponent = r.player2;\n\t\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t\topponent = r.player1;\n\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\tvar isWin;\n\t\t\t\t\t\t\t\t\tif(!isLose){\n\t\t\t\t\t\t\t\t\t\tisWin = 1;\n\t\t\t\t\t\t\t\t\t\t$scope.winOrLoseMessage = \"You won against player \" + opponent;\n\t\t\t\t\t\t\t\t\t\tr.winner = userId;\n\t\t\t\t\t\t\t\t\t\t$scope.rooms.$save(r);\n\t\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t\tisWin = 0;\n\t\t\t\t\t\t\t\t\t\t$scope.winOrLoseMessage = \"You lose against player \" + opponent;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tcodeModel.setBattle(battle_id,1, isWin)\t\n\t\t\t\t\t\t\t\t\t\t.success(function(){\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('problem set to solve in battle');\n\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\t\t/*Single Player*/\n\t\t\t\t\t\t\t\t\t/* if single player make a deeper judgement */\n\t\t\t\t\t\t\t\t\t/* send source code here.. */\n\t\t\t\t\t\t\t\t\tcodeModel.judgeCode(myCodeMirror.getValue(), $scope.problemCode)\n\t\t\t\t\t\t\t\t\t\t.success(function(response){\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(response);\n\t\t\t\t\t\t\t\t\t\t\tif(response == \"good\"){\n\t\t\t\t\t\t\t\t\t\t\t\t$scope.isCorrect = true;\n\t\t\t\t\t\t\t\t\t\t\t\t$scope.resultSubmissionColor = \"submission-accepted\";\n\t\t\t\t\t\t\t\t\t\t\t\tcodingService.setSuccess(true);\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('accepted deep judgement');\n\t\t\t\t\t\t\t\t\t\t\t\tcodeModel.setRound(round)\n\t\t\t\t\t\t\t\t\t\t\t\t\t.success(function(){\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tconsole.log('problem set to solve');\n\t\t\t\t\t\t\t\t\t\t\t\t\t});\t\n\t\t\t\t\t\t\t\t\t\t\t\t/* set to no weakness */\n\t\t\t\t\t\t\t\t\t\t\t\tif( !hasNewWeakness || $scope.checkRankForWeakness(weakness) ){\n\t\t\t\t\t\t\t\t\t\t\t\t\tproblemModel.setWeakness(0);\n\t\t\t\t\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t\t\t\t}else{\t\n\t\t\t\t\t\t\t\t\t\t\t\t$scope.submitStatusDescription = \"Requirements are not met.. Please review the problem.\";\n\t\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif(!isMulti){\n\t\t\t\t\t\t\t\t\twrongAnswer++;\n\t\t\t\t\t\t\t\t\tif(wrongAnswer == 3){\n\t\t\t\t\t\t\t\t\t\tcodingService.setHasNewWeakness(true);\n\t\t\t\t\t\t\t\t\t\tproblemModel.setWeakness(codingService.getWeaknessId())\n\t\t\t\t\t\t\t\t\t\t.success(function(){\n\t\t\t\t\t\t\t\t\t\t\thasNewWeakness = true;\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"weakness set to \" + codingService.getWeaknessId());\n\t\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\t$scope.resultSubmissionColor = \"submission-error\";\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.error(function(){\n\t\t\t\t\t\t$scope.checkingResult = false;\n\t\t\t\t\t\t$scope.submitStatusDescription = \"Sorry submission failed. Please try again...\";\n\t\t\t\t\t\tsetTimeout(function(){\n\t\t\t\t\t\t\t$('#submitCode').closeModal();\n\t\t\t\t\t\t}, 2000);\n\t\t\t\t\t});\n\t\t\t},\n\t\t\t// only for single player\n\t\t\tupdateRankProceed: function(){\n\t\t\t\tcodingService.setIsEnableCode(false);\n\t\t\t\tleaveState = true;\n\t\t\t\tcodingService.setHasResult(true);\n\t\t\t\t$state.go('resultPage');\n\t\t\t},\n\t\t\tproceed: function(){\n\t\t\t\t/* set error counts in each subj from this round */\n\t\t\t\tif(isMulti){\n\t\t\t\t\tcodeModel.saveErrors(errorService.getErrorCountMS(), errorService.getErrorCountSE(),\n\t\t\t\t\t\terrorService.getErrorCountPM(), errorService.getErrorCountIE(), \"multiplayer\" )\n\t\t\t\t\t.success(function(){\n\t\t\t\t\t\tconsole.log(\"Error counts are set.\");\n\t\t\t\t\t});\n\n\t\t\t\t\tif($scope.isCorrect){\n\n\t\t\t\t\t\t$scope.updateRankProceed();\n\t\t\t\t\t}else{\n\t\t\t\t\t\tvar r = $scope.rooms.$getRecord(roomKey);\n\t\t\t\t\t\tr.giveup = userId;\n\t\t\t\t\t\t$scope.rooms.$save(r);\n\t\t\t\t\t\tconsole.log(\"you have given up\");\n\t\t\t\t\t\t$scope.updateRankProceed();\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t}else{\n\t\t\t\t\tcodeModel.saveErrors(errorService.getErrorCountMS(), errorService.getErrorCountSE(),\n\t\t\t\t\t\terrorService.getErrorCountPM(), errorService.getErrorCountIE(), \"single\" )\n\t\t\t\t\t\t.success(function(){\n\t\t\t\t\t\t\tconsole.log(\"Error counts are set.\");\n\t\t\t\t\t\t});\n\n\t\t\t\t\tvar weakness = codingService.getWeaknessId();\n\t\t\t\t\tif($scope.isCorrect){\n\t\t\t\t\t\tcodeModel.rankUp(weakness)\n\t\t\t\t\t\t\t.success(function(response){\n\t\t\t\t\t\t\t\t$scope.setRank();\n\t\t\t\t\t\t\t\t$scope.updateRankProceed();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t} else { /* Give up */\n\t\t\t\t\t\tcodingService.setHasNewWeakness(true);\n\t\t\t\t\t\tcodingService.setSuccess(false);\n\t\t\t\t\t\tproblemModel.setWeakness(weakness)\n\t\t\t\t\t\t\t.success(function(){\n\t\t\t\t\t\t\t\t$scope.updateRankProceed();\n\t\t\t\t\t\t\t});\t\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t}\n\t\t});\n\t\t// automatic activity\n\t\trank1 = rankService.getRankSCS();\n\t\trank2 = rankService.getRankRCS();\n\t\trank3 = rankService.getRankARR();\n\t\t$('ul.tabs').tabs('select_tab', 'problem_details');\n\t\t\n\n\t\tif(codingService.getIsEnableCode()){\n\t\t\t// get problem details\n\t\t\tisMulti = codingService.getIsMultiplayer();\n\t\t\tcodingService.setSuccess(false);\n\t\t\tvar pCode = codingService.getProblemCode();\n\t\t\tvar langId = codingService.getLanguage();\n\t\t\t// set problem details`\n\t\t\t$scope.problemCode = pCode;\n\t\t\tg_languageId = langId;\n  \t\t\tconsole.log(pCode);\n  \t\t\t\n\t\t\t$scope.problemDescription = codingService.getProblemDescription();\n\n\t\t\tfunction startTimer(duration,display) {\n\t\t\t    var timer = duration, minutes, seconds;\n\t\t\t    var timerId = setInterval(function () {\n\t\t\t        hours = parseInt((timer / 60) / 60, 10);\n\t\t\t        minutes = parseInt((timer / 60) % 60, 10);\n\t\t\t        seconds = parseInt(timer % 60, 10);\n\n\t\t\t        hours = hours < 10 ? \"0\" + hours : hours;\n\t\t\t        minutes = minutes < 10 ? \"0\" + minutes : minutes;\n\t\t\t        seconds = seconds < 10 ? \"0\" + seconds : seconds;\n\n\t\t\t        display.textContent = hours + \":\" + minutes + \":\" + seconds;\n\n\t\t\t        if(--timer < 0) {\n\t\t\t            clearInterval(timerId);\n\t\t\t            $scope.alert_title = \"Time's up!!!\";\n\t\t\t            $scope.alert_description = \"You have'nt solved the problem on time!\";\n\t\t\t            $scope.closableModal = false;\n\t\t\t            $('#alertModal').openModal({dismissible:false});\n\t\t\t        }\n\t\t\t    }, 1000);\n\t\t\t}\n\t\t\tif(codingService.getIsMultiplayer()){\n\t\t\t\tdisplay = document.querySelector('#time');\n\t\t\t    var timeLimit = codingService.getTimeLimit();\n\t\t\t    startTimer(timeLimit, display);\n\t\t\t}\n\t\t}else{\n\t\t\tleaveState = true;\n\t\t\t$state.go('problemPage');\n\t\t\tconsole.log('unable to code');\n\t\t}\t\n\n\t\t/* Get user id */\n\t    userModel.getUserId()\n\t\t\t.success(function(response){\n\t\t\t\tuserId = response;\n\t\t\t\t/* check if multiplayer */\n\t\t\t\tif(codingService.getIsMultiplayer()){\n\t\t\t    \t$scope.isMultiplayer = true;\n\n\t\t\t\t\tvar refRoom = firebase.database().ref().child(\"rooms\");\n\t\t\t\t\t$scope.rooms = $firebaseArray(refRoom);\n\t\t\t\n\t\t\t    \troomKey = codingService.getRoomKey();\n\n\t\t\t    \tvar pcode = codingService.getProblemCode();\n\t\t\t    \t$scope.rooms.$loaded() \n\t\t\t    \t\t.then(function(room){\n\t\t\t    \t\t\tvar r = $scope.rooms.$getRecord(roomKey);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(r.player1 == userId){\n\t\t\t\t\t\t\t\topponent_id = r.player2;\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\topponent_id = r.player1;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tcodeModel.addBattle(opponent_id, pcode)\n\t\t\t\t\t\t\t.success(function(response){\n\t\t\t\t\t\t\t\tbattle_id = response;\n\t\t\t\t\t\t\t})\n\t\t\t\t\t\t\t\t\n\t\t\t    \t\t\tcheckWinner();\n\t\t\t    \t\t});\n\n\t\t\t    }else{\n\t\t\t\t\tcodeModel.addRound(pCode)\n\t\t\t\t\t\t.success(function (response){\n\t\t\t\t\t\t\tround = response;\n\t\t\t\t\t\t\tconsole.log(\"heree.............\");\n\t\t\t\t\t\t\tconsole.log(response);\n\t\t\t\t\t\t});\t\t\t    \t\n\t\t\t    }\n\t\t\t});\n\n\t    function checkWinner(){\n\t    \tvar r = $scope.rooms.$getRecord(roomKey);\n\t  \t\tif(!r.winner && !r.giveup){\n\t  \t\t\tsetTimeout(checkWinner, 1000);\n\t  \t\t\treturn;\n\t  \t\t}\n\n  \t\t\tif(r.winner == opponent_id){\n  \t\t\t\tisLose = true;\n  \t\t\t\t$scope.alert_title = \"You lose\";\n\t            $scope.alert_description = codingService.getOpponentName() + \" has won the game!\";\n\t            $scope.closableModal = true;\n\t            $('#alertModal').openModal({dismissible:false});\n  \t\t\t}else if(r.giveup == opponent_id){\n  \t\t\t\t$scope.alert_title = \"You won\";\n\t            $scope.alert_description = codingService.getOpponentName() + \" has given up!\";\n\t\t\t\t$scope.closableModal = true;\n\t            $('#alertModal').openModal({dismissible:false});\n\n  \t\t\t\tr.winner = userId;\n  \t\t\t\t$scope.rooms.$save(r);\n  \t\t\t\t\n  \t\t\t\tcodeModel.setBattle(battle_id,0, 1)\n\t\t\t\t.success(function(){\n  \t\t\t\t\tcodingService.setIsWinner(true);\n\t\t\t\t\tconsole.log('problem set to winner in battle');\n\t\t\t\t});\n  \t\t\t}\n\t  \t\treturn;\n\t    }\n\n\t    /* functions when user leaves the page */\n\t\tvar is_able_c = true;\n\n\t  \t$scope.$on('$stateChangeStart', function( event ) {\n\t  \t\tis_able_c = false;\t\n\t\t    \n\t\t    if(!leaveState){\n\n\t    \t\tif(confirm('Are you sure you want to leave? This will be considered that you have given up the problem.')) {\n           \t\t\tcodingService.setIsEnableCode(false);\n           \t\t\t/* set to give up. */\n           \t\t\tvar r = $scope.rooms.$getRecord(roomKey);\n\t\t\t\t\tr.giveup = userId;\n\t\t\t\t\t$scope.rooms.$save(r);\n\t\t\t\t\tconsole.log(\"you have given up\");\n\t\t\t    } else {\n\t\t\t    \tis_able_c = true;\n\t\t\t   \t\tevent.preventDefault();\n\t\t\t    }\n\t\t    }\n\t\t});\n\n\t\twindow.onbeforeunload = function() { \n\t  \t\tif(is_able_c){\n\t\t\t      if(confirm('Are you sure you want to leave? this will be considered that you have given up the problem.')) {\n\t\t\t      \tcodingService.setIsEnableCode(false);\n           \t\t\treturn true; \n\t\t\t      }\n\t\t\t      else {\n\t\t\t        return false; \n\t\t\t      }\n\t\t  \t}\n\t\t};\t \n\n\t\t$(window).on('unload', function(e) {\n\n\t\t\tvar r = $scope.rooms.$getRecord(roomKey);\n\t\t\tr.giveup = userId;\n\t\t\t$scope.rooms.$save(r);\n\t\t\tconsole.log(\"you have given up\");\n\t\t});\n\t}]);","myApp.controller('problemController', ['$scope','problemModel', '$state', 'codingService', 'rankService',\n\tfunction($scope, problemModel, $state,codingService,rankService){\n\n\t\tvar weaknesses = [];\n\t\tvar problem_code = null;\n\n\t\t// variables\n\t\tangular.extend($scope, {\n\t\t\tlanguage: \"C\",\n\t\t\tlanguageId: 11,\n\t\t\tloadingProblem: true,\n\t\t\tloadSuccess: false,\n\t\t\thasWeakness: false\n\t\t});\n\n\t\t// functions\n\t\tangular.extend($scope,{\n\t\t\tgetProblemCode: function(){\n\t\t\t},\n\t\t\tgetProblem: function(){\n\t\t\t\t/* From Shere Engine API */\n\t\t\t\tvar i = 0;\n\t\t\t\tvar getProblemFromApi = function(){\n\t\t\t\t\tproblemModel.getProblem(problem_code)\n\t\t\t\t\t\t.success(function(response){\n\t\t\t\t\t\t\t$scope.loadingProblem = false;\n\t\t\t\t\t\t\t$scope.problemDescription = response.body;\n\t\t\t\t\t\t\tcodingService.setProblemDescription(response.body);\n\t\t\t\t\t\t})\n\t\t\t\t\t\t. error(function(response){\n\t\t\t\t\t\t\tif(i == 5){\n\t\t\t\t\t\t\t\t$scope.loadingProblem = false;\n\t\t\t\t\t\t\t\t$scope.problemDescription = \"Failed to load problem. Please refresh the page.\";\n\t\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\t\tgetProblemFromApi();\n\t\t\t\t\t\t\t\ti++;\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\tgetProblemFromApi();\n\t\t\t\t/* From My API */\n\t\t\t\tproblemModel.getProblemDetails(problem_code,'single')\n\t\t\t\t\t.success(function(response){\n\t\t\t\t\t\tcodingService.setTimeLimit(response.time_limit);\n\t\t\t\t\t\tvar time = response.time_limit;\n\t\t\t\t\t\tvar hr = parseInt((time / 60) / 60, 10);\n\t\t\t\t\t\tvar min = parseInt((time / 60) % 60, 10);\n\t\t\t\t\t\tvar sec = parseInt(time % 60, 10);\n\t\t\t\t\t\t\n\t\t\t\t\t\t$scope.loadSuccess = true;\n\t\t\t\t\t\t$scope.difficulty = response.difficulty;\n\t\t\t\t\t\tcodingService.setProblemDifficulty(response.difficulty);\n\t\t\t\t\t\t\n\t\t\t\t\t\t$scope.time_limit = hr + \"hr/s and \" + min + \"min/s\"\n\n\t\t\t\t\t\tswitch(response.weakness_id){\n\t\t\t\t\t\t\tcase 1: \n\t\t\t\t\t\t\t\t$scope.subject_area = \"Selection Control Structure\";\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 2: \n\t\t\t\t\t\t\t$scope.subject_area = \"Repetition Control Structure\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 3: \n\t\t\t\t\t\t\t$scope.subject_area = \"Array\";\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t})\n\t\t\t\t\t.error(function(response){\n\t\t\t\t\t\tconsole.log(response);\n\t\t\t\t\t\t$scope.loadingProblem = false;\t\t\n\t\t\t\t\t\t$scope.problemTitle = \"Failed to load problem. Please Try Again\";\n\t\t\t\t\t});\n\t\t\t},\n\t\t\tsolveIt: function(){\n\t\t\t\tconsole.log(problem_code);\n\t\t\t\tconsole.log($scope.languageId);\n\t\t\t\tcodingService.setProblemCode(problem_code);\n\t\t\t\tcodingService.setIsEnableCode(true);\n\t\t\t\tcodingService.setIsMultiplayer(false);\n\t\t\t\t$state.go('codingPage');\n\t\t\t\t\n\t\t\t},\n\t\t\tgetRandomProblems: function(w){\n\t\t\t\tproblemModel.getRandomProblem(w)\n\t\t\t\t\t.success(function(response){\n\t\t\t\t\t\tconsole.log(response);\n\t\t\t\t\t\tif(response != 0){\n\t\t\t\t\t\t\tproblem_code = response;\n\t\t\t\t\t\t\t$scope.getProblem();\n\t\t\t\t\t\t}else{\n\t\t\t\t\t\t\talert('There is no more problem to fetch');\n\t\t\t\t\t\t}\n\t\t\t\t\t})\t\n\t\t\t\t\t.error(function(){\n\t\t\t\t\t\talert('There was an error fetching a problem');\n\t\t\t\t\t});\n\t\t\t},\n\t\t\tgetRandomWeakness: function(subjScope){\n\t\t\t\tvar selected;\n\t\t\t\tconsole.log(\"SCOPE \" + subjScope);\n\t\t\t\tvar included = [];\n\t\t\t\tvar prioritize = 4;\n\t\t\t\tif(subjScope == 3){\n\t\t\t\t\tfor(var x = 0; x < 3; x++){\n\t\t\t\t\t\tvar loop = 0; \n\t\t\t\t\t\tvar lower = 0;\n\t\t\t\t\t\tvar higher = 0;\n\t\t\t\t\t\tif(prioritize == 4){\n\t\t\t\t\t\t\tfor(var y = 0; y < 3 ; y++){\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif( x == y ){\n\t\t\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tloop++;\n\n\t\t\t\t\t\t\t\tif(Math.abs(weaknesses[x] - weaknesses[y]) >=2 ){\n\t\t\t\t\t\t\t\t\tif(weaknesses[x] > weaknesses[y]){\n\t\t\t\t\t\t\t\t\t\thigher++;\n\t\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\tlower++;\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif(lower == 2){\n\t\t\t\t\t\t\t\t\tprioritize = x;\n\t\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\tif(higher != 2){\n\t\t\t\t\t\t\t\t\tif(loop == 2){\n\t\t\t\t\t\t\t\t\t\tincluded.push(x);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t\t\n\n\t\t\t\t}else{\n\t\t\t\t\tvar diff = weaknesses[0] - weaknesses[1];\n\t\t\t\t\tif( diff >= 2){\n\t\t\t\t\t\tprioritize = 1;\n\t\t\t\t\t}else if(diff <= -2){\n\t\t\t\t\t\tprioritize = 0;\n\t\t\t\t\t}else{\n\t\t\t\t\t\tincluded.push(0);\n\t\t\t\t\t\tincluded.push(1);\n\t\t\t\t\t}\n\t\t\t\t}\t\t\t\t\n\t\t\t\tconsole.log(included);\n\t\t\t\tif(prioritize == 4){\n\t\t\t\t\tselected = included[Math.floor(Math.random() * included.length)];\n\t\t\t\t}else{\n\t\t\t\t\tselected = prioritize;\n\t\t\t\t}\n\t\t\t\tselected++;\n\t\t\t\tconsole.log(\"selected: \" + selected);\n\n\t\t\t\tcodingService.setWeaknessId(selected);\n\t\t\t\t$scope.getRandomProblems(selected);\n\t\t\t},\t\n\t\t\tlanguageToC: function(){\n\t\t\t\t$scope.language = \"C\";\n\t\t\t\t$scope.languageId = 11;\n\t\t\t\tcodingService.setLanguage(11);\n\t\t\t},\n\t\t\tlanguageToCpp: function(){\n\t\t\t\t$scope.language = \"C++\";\n\t\t\t\t$scope.languageId = 1;\n\t\t\t\tcodingService.setLanguage(1);\n\t\t\t},\n\t\t\tlanguageToJava: function(){\n\t\t\t\t$scope.language = \"Java\";\n\t\t\t\t$scope.languageId = 10;\n\t\t\t\tcodingService.setLanguage(10);\n\t\t\t},\n\t\t\tsetRanks: function(){\n\t\t\t\tconsole.log('here');\n\t\t\t\tvar rank1 = 0, rank2 = 0, rank3 = 0;\n\t\t\t\tfunction initialize(){\n\t\t\t\t\trank1 = rankService.getRankSCS();\n\t\t\t\t\trank2 = rankService.getRankRCS();\n\t\t\t\t\trank3 = rankService.getRankARR();\n\n\t\t\t\t\tif(rank1 == 0 || rank2 == 0 || rank3 == 0){\n\t\t\t\t\t\tsetTimeout(initialize, 1000);\n\t\t\t\t\t}else{\n\t\t\t\t\t\tvar subjScope = 2;\n\t\t\t\t\t\tif(rank1 > 10 && rank2 > 10){\n\t\t\t\t\t\t\tsubjScope = 3;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tweaknesses.push(rank1);\n\t\t\t\t\t\tweaknesses.push(rank2);\n\t\t\t\t\t\tweaknesses.push(rank3);\n\t\t\t\t\t\t$scope.getRandomWeakness(subjScope);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tinitialize();\n\t\t\t}\n\t\t});\n\n\t\tif(codingService.getIsMultiplayer()){\n\n\t\t}else{\t\n\t\t\tproblemModel.checkHasWeakness()\n\t\t\t\t.success(function(response){\n\t\t\t\t\tif(response == 0){\n\t\t\t\t\t\t$scope.setRanks();\n\t\t\t\t\t}else{\n\t\t\t\t\t\tconsole.log(\"You have a problem in subject area -> \" + response);\n\t\t\t\t\t\tcodingService.setWeaknessId(response);\n\t\t\t\t\t\t$scope.getRandomProblems(response);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t}\n\n\t\t// Activities\n\t\t$scope.languageToCpp();\t\n\t}]);\n","myApp.controller('resultController', ['$scope', 'errorService', 'codingService', \n\t\t\t\t\t\t'rankService', '$state', 'problemModel','badgeModel',\n\tfunction($scope, errorService,codingService, rankService, $state, problemModel, badgeModel){\n\t\t{\n\t\t\tvar checkBadges = function(){\n\n\t\t\t\tif(codingService.getIsMultiplayer()){\n\n\t\t\t\t}else{\n\t\t\t\t\tconsole.log('checking badges for solo mode');\n\t\t\t\t\tbadgeModel.getBadges().success(function(response){\n\t\t\t\t\t\tvar badgesID = [];\n\n\t\t\t\t\t\tangular.forEach(response,function(value, key){\n\t\t\t\t\t\t\tbadgesID.push(value.id);\n\t\t\t\t\t\t});\n\t\t\t\t\t\tconsole.log(badgesID);\n\n\t\t\t\t\t\tvar checkIfExist = function(badges, id){\n\t\t\t\t\t\t\tfor(var x = 0; x < badges.length; x++){\n\t\t\t\t\t\t\t\tif(badges[x] == id){\n\t\t\t\t\t\t\t\t\treturn true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\treturn false;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tvar giveBadge = function($id){\n\t\t\t\t\t\t\tbadgeModel.addBadge($id)\n\t\t\t\t\t\t\t\t.success(function(response){\n\t\t\t\t\t\t\t\t\t$scope.badgeFileName = response.filename;\n\t\t\t\t\t\t\t\t\t$scope.badgeName = response.name;\n\t\t\t\t\t\t\t\t\t$scope.badgeDescription = response.description;\n\t\t\t\t\t\t\t\t\tconsole.log(response.name)\n\t\t\t\t\t\t\t\t\tconsole.log(response.description);\n\t\t\t\t\t\t\t\t\t$('#badgeModal').openModal({dismissible:false});\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif(codingService.getProblemDifficulty() == 'easy'){\n\t\t\t\t\t\t\tif(!checkIfExist(badgesID, 1)){\n\t\t\t\t\t\t\t\tconsole.log('started from the bottom');\n\t\t\t\t\t\t\t\t\tgiveBadge(1);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tbadgeModel.countSolved('easy', 0)\n\t\t\t\t\t\t\t\t.success(function(response){\n\t\t\t\t\t\t\t\t\tif(!checkIfExist(badgesID, 2)){\n\t\t\t\t\t\t\t\t\t\tif(response >= 5){\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"We’re getting there!\");\t\t\n\t\t\t\t\t\t\t\t\t\t\tgiveBadge(2);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else if(checkIfExist(badgesID, 3)){\n\t\t\t\t\t\t\t\t\t\tif(response >= 10){\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('Ten steps closer to success!');\n\t\t\t\t\t\t\t\t\t\t\tgiveBadge(3);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else if(badgesID, 6){\n\t\t\t\t\t\t\t\t\t\tif(response >= 25){\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('Easy krizzy!');\n\t\t\t\t\t\t\t\t\t\t\tgiveBadge(6);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\tif(!checkIfExist(5)){\n\t\t\t\t\t\t\tbadgeModel.countSolved('easy', 1)\n\t\t\t\t\t\t\t\t.success(function(response){\n\t\t\t\t\t\t\t\t\tif(response >= 10){\n\t\t\t\t\t\t\t\t\t\tconsole.log('I choose you!');\n\t\t\t\t\t\t\t\t\t\tgiveBadge(5);\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!checkIfExist(4)){\n\t\t\t\t\t\t\t\tbadgeModel.countSolved('easy', 2)\n\t\t\t\t\t\t\t\t\t.success(function(response){\n\t\t\t\t\t\t\t\t\t\tif(response >= 10){\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('Repeat after me!');\n\t\t\t\t\t\t\t\t\t\t\tgiveBadge(4);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if(codingService.getProblemDifficulty() == 'average'){\n\t\t\t\t\t\t\tbadgeModel.countSolved('average', 0)\n\t\t\t\t\t\t\t\t.success(function(response){\n\t\t\t\t\t\t\t\t\tif(!checkIfExist(badgesID, 7)){\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\tif(response >= 5){\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('Not your average programmer!');\n\t\t\t\t\t\t\t\t\t\t\tgiveBadge(7);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else if(!checkIfExist(badgesID, 8)){\n\t\t\t\t\t\t\t\t\t\tif(response >= 10){\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('Average? I’m beyond that!');\n\t\t\t\t\t\t\t\t\t\t\tgiveBadge(8);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t} else if(!checkIfExist(12)){\n\t\t\t\t\t\t\t\t\t\tif(response >= 45){\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('Hard mode here I come!');\n\t\t\t\t\t\t\t\t\t\t\tgiveBadge(12);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\tif(!checkIfExist(badgesID, 10)){\n\t\t\t\t\t\t\t\tbadgeModel.countSolved('average', 1)\n\t\t\t\t\t\t\t\t.success(function(response){\n\t\t\t\t\t\t\t\t\t\tif(response >= 15){\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('The selection life chose me!');\n\t\t\t\t\t\t\t\t\t\t\tgiveBadge(10);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!checkIfExist(badgesID, 9)){\n\t\t\t\t\t\t\t\tbadgeModel.countSolved('average', 2)\n\t\t\t\t\t\t\t\t.success(function(response){\n\t\t\t\t\t\t\t\t\t\tif(response >= 15){\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('Over and over again!');\n\t\t\t\t\t\t\t\t\t\t\tgiveBadge(9);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!checkIfExist(badgesID, 11)){\n\t\t\t\t\t\t\t\tbadgeModel.countSolved('average', 3)\n\t\t\t\t\t\t\t\t.success(function(response){\n\t\t\t\t\t\t\t\t\t\tif(response >= 15){\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('Bombs Array!');\n\t\t\t\t\t\t\t\t\t\t\tgiveBadge(11);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if(codingService.getProblemDifficulty() == 'hard'){\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tbadgeModel.countSolved('hard', 0)\n\t\t\t\t\t\t\t\t.success(function(response){\n\t\t\t\t\t\t\t\t\tif(!checkIfExist(13)){\n\t\t\t\t\t\t\t\t\t\tif(response >= 5){\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('Challenge Accepted!');\n\t\t\t\t\t\t\t\t\t\t\tgiveBadge(13);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t                        if(!checkIfExist(14)){\n\t\t\t\t\t\t\t\t\t\tif(response >= 10){\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('Road to success!');\n\t\t\t\t\t\t\t\t\t\t\tgiveBadge(14);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\t\t\n\t\t\t\t\t\t\t\t\tif(!checkIfExist(18)){\n\t\t\t\t\t\t\t\t\t\tif(response >= 45){\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('Hardships have only made me stronger!');\n\t\t\t\t\t\t\t\t\t\t\tgiveBadge(18);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif(!checkIfExist(16)){\n\t\t\t\t\t\t\t\tbadgeModel.countSolved('hard', 1)\n\t\t\t\t\t\t\t\t\t.success(function(response){\n\t\t\t\t\t\t\t\t\t\tif(response >= 15){\n\t\t\t\t\t\t\t\t\t\t\tconsole.log(\"You've chosen wisely!\");\n\t\t\t\t\t\t\t\t\t\t\tgiveBadge(16);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!checkIfExist(15)){\n\t\t\t\t\t\t\t\tbadgeModel.countSolved('hard', 2)\n\t\t\t\t\t\t\t\t\t.success(function(response){\n\t\t\t\t\t\t\t\t\t\tif(response >= 15){\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('Eat. Sleep. Code. Repeat!');\n\t\t\t\t\t\t\t\t\t\t\tgiveBadge(15);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\tif(!checkIfExist(17)){\n\t\t\t\t\t\t\t\tbadgeModel.countSolved('hard', 3)\n\t\t\t\t\t\t\t\t\t.success(function(response){\n\t\t\t\t\t\t\t\t\t\tif(response >= 15){\n\t\t\t\t\t\t\t\t\t\t\tconsole.log('Arranged? No, array-nged!');\n\t\t\t\t\t\t\t\t\t\t\tgiveBadge(17);\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\t\t\tcheckBadges();\n\n\t\t\t$scope.isSuccess = codingService.getSuccess();\n\t\t\t$scope.isMultiplayer = codingService.getIsMultiplayer();\n\t\t\t$scope.isWinner = codingService.getIsWinner();\n\t\t\tvar subject_area = codingService.getWeaknessId();\n\t\t\t\n\t\t\tif(!codingService.getHasResult()){\n\t\t\t\t$state.go('statProgPage');\n\t\t\t}\n\t\t\tif(codingService.getHasNewWeakness()){\n\t\t\t\tproblemModel.getProblemFeedBack(codingService.getProblemCode())\n\t\t\t\t\t.success(function(response){\n\t\t\t\t\t\t$scope.feedback = response;\n\t\t\t\t\t\tcodingService.setHasNewWeakness(false);\n\t\t\t\t\t});\n\t\t\t}\n\t\t\tvar getAction = function(sa){\n\t\t\t\tif(subject_area == sa){\n\t\t\t\t\tif($scope.isSuccess)\n\t\t\t\t\t\treturn \"up\";\n\t\t\t\t}\n\t\t\t\treturn \"none\";\n\t\t\t}\n\t\t\tsetTimeout(function(){\n\t\t\t\t$scope.$apply(function(){\n\t\t\t\t\tif($scope.averager){\n\t\t\t\t\t\t$scope.ranks = [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"SubjectArea\": \"Selection Control Structure\",\n\t\t\t\t\t\t\t\t\"Rank\": rankService.getRankSCS(),\n\t\t\t\t\t\t\t\t\"Action\" : getAction(1)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"SubjectArea\": \"Repetition Control Structure\",\n\t\t\t\t\t\t\t\t\"Rank\": rankService.getRankRCS(),\n\t\t\t\t\t\t\t\t\"Action\" : getAction(2)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"SubjectArea\": \"Array\",\n\t\t\t\t\t\t\t\t\"Rank\": rankService.getRankARR(),\n\t\t\t\t\t\t\t\t\"Action\" : getAction(3)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t\t$scope.ranksLoaded = true;\n\t\t\t\t\t}else{\n\t\t\t\t\t\t$scope.ranks = [\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"SubjectArea\": \"Selection Control Structure\",\n\t\t\t\t\t\t\t\t\"Rank\": rankService.getRankSCS(),\n\t\t\t\t\t\t\t\t\"Action\" : getAction(1)\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\t\"SubjectArea\": \"Repetition Control Structure\",\n\t\t\t\t\t\t\t\t\"Rank\": rankService.getRankRCS(),\n\t\t\t\t\t\t\t\t\"Action\" : getAction(2)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t]\n\t\t\t\t\t\t$scope.ranksLoaded = true;\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}, 2000);\n\t\t\t\n\t\t\t// bar graph\n\n\t\t\tvar getBarColor = function(num){\n\t\t\t\tif( num > 15){\n\t\t\t\t\treturn \"rgba(255, 0, 0, 0.8)\";\n\t\t\t\t} else if( num <= 15 && num > 8){\n\t\t\t\t\treturn \"rgba(255, 153, 0, 0.8)\"\n\t\t\t\t} else{\n\t\t\t\t\treturn \"rgba(0, 255, 0, 0.8)\"\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar ctx = document.getElementById(\"myChart\");\n\t\t\t\n\t\t\tvar barColor = [];\n\t\t\tbarColor.push(getBarColor(errorService.getErrorCountMS()));\n\t\t\tbarColor.push(getBarColor(errorService.getErrorCountSE()));\n\t\t\tbarColor.push(getBarColor(errorService.getErrorCountPM()));\n\t\t\tbarColor.push(getBarColor(errorService.getErrorCountIE()));\t\t\t\n\n\t\t\tvar myChart = new Chart(ctx, {\n\t\t\t    type: 'bar',\n\t\t\t    data: {\n\t\t\t        labels: [\"Missing Semicolon\", \"Scoping Error\", \"Parenthesis Matching\", \"Identifier Error\"],\n\t\t\t        datasets: [{\n\t\t\t            label: '# of Errors',\n\t\t\t            data: [errorService.getErrorCountMS(), errorService.getErrorCountSE(), \n\t\t\t            \t\terrorService.getErrorCountPM(), errorService.getErrorCountIE()],\n\t\t\t            backgroundColor: barColor\n\t\t\t        }]\n\t\t\t    },\n\t\t\t    options: {\n\t\t\t        scales: {\n\t\t\t            yAxes: [{\n\t\t\t                ticks: {\n\t\t\t                    beginAtZero:true,\n\t\t\t                    max: 40\n\t\t\t                }\n\t\t\t            }]\n\t\t\t        },\n\t\t\t        responsive: false,\n\t\t\t        legend:{\n\t\t\t        \tdisplay: false\n\t\t\t        },\n\t\t\t        title: {\n\t\t\t            display: true,\n\t\t\t            text: 'Error Frequencies',\n\t\t\t            fontSize: 20 \n\t\t\t        }\n\t\t\t    }\n\t\t\t});\n\t\t}\n\t}]);","myApp.controller('badgeController', ['$scope', 'badgeModel',\n\tfunction($scope, badgeModel){\n\t\t\n\t\tvar getBadges = function(){\n\t\t\tbadgeModel.getBadges()\n\t\t\t\t.success(function(response){\n\t\t\t\t\tconsole.log(response);\n\t\t\t\t\t$scope.badges = response;\n\t\t\t\t});\n\t\t}\n\t\tgetBadges();\n\n\n\n\t}]);","myApp.controller('statprogController', ['$scope', 'userModel',\n\tfunction($scope, userModel){\n\t\tangular.extend($scope, {\n\t\t\thasProgress_single: false,\n\t\t\tnoProgress_single: false,\n\t\t\thasProgress_multi: false,\n\t\t\tnoProgress_multi: false\n\t\t});\n\n\t\tangular.extend($scope, {\n\t\t\tgetData: function(label, data, r, g , b){\n\t\t\t\tvar data_object = {\n\t\t\t\t\t\t            label: label,\n\t\t\t\t\t\t            lineTension: 0.1,\n\t\t\t\t\t\t            backgroundColor: \"rgba(\"+ r + \",\" + g + \",\" + b + \",0.1)\",\n\t\t\t\t\t\t            borderColor: \"rgba(\"+ r + \",\" + g + \",\" + b + \",1)\",\n\t\t\t\t\t\t            borderCapStyle: 'butt',\n\t\t\t\t\t\t            borderDash: [],\n\t\t\t\t\t\t            borderDashOffset: 0.0,\n\t\t\t\t\t\t            borderJoinStyle: 'miter',\n\t\t\t\t\t\t            pointBorderColor: \"rgba(\"+ r + \",\" + g + \",\" + b + \",1)\",\n\t\t\t\t\t\t            pointBackgroundColor: \"#fff\",\n\t\t\t\t\t\t            pointBorderWidth: 1,\n\t\t\t\t\t\t            pointHoverRadius: 5,\n\t\t\t\t\t\t            pointHoverBackgroundColor: \"rgba(\"+ r + \",\" + g + \",\" + b + \",1)\",\n\t\t\t\t\t\t            pointHoverBorderColor: \"rgba(220,220,220,1)\",\n\t\t\t\t\t\t            pointHoverBorderWidth: 2,\n\t\t\t\t\t\t            pointRadius: 1,\n\t\t\t\t\t\t            pointHitRadius: 10,\n\t\t\t\t\t\t            data: data,\n\t\t\t\t\t\t            spanGaps: false,\n\t\t\t\t\t\t        }\n\t\t\t\treturn data_object;\n\t\t\t},\n\t\t\tshowGraph: function(response, mode){\n\t\t\t\tif(response != 0){\n\t\t\t\t\t\n\t\t\t\t\tif(mode == \"single\"){\n\t\t\t\t\t\t$scope.hasProgress_single = true;\n\t\t\t\t\t\tvar ctx = document.getElementById(\"statistical_progress_single\");\n\t\t\t\t\t}\n\t\t\t\t\telse{\n\t\t\t\t\t\t$scope.hasProgress_multi = true;\n\t\t\t\t\t\tvar ctx = document.getElementById(\"statistical_progress_multi\");\n\t\t\t\t\t}\n\n\t\t\t\t\tvar errs = response;\n\t\t\t\t\tvar lbl_i = 1;\n\t\t\t\t\tvar label = [];\n\t\t\t\t\tvar ms = [], se = [],\n\t\t\t\t\tpm = [], ie = [];\n\t\t\t\t\t\n\t\t\t\t\tfor(var x = 0; x < errs.length; x++){\n\t\t\t\t\t\tif(errs[x].type == 1){\n\t\t\t\t\t\t\tlabel.push(lbl_i);\n\t\t\t\t\t\t\tms.push(errs[x].count);\n\t\t\t\t\t\t\tlbl_i++;\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse if(errs[x].type == 2)\n\t\t\t\t\t\t\tse.push(errs[x].count);\n\t\t\t\t\t\telse if(errs[x].type == 3)\n\t\t\t\t\t\t\tpm.push(errs[x].count);\n\t\t\t\t\t\telse if(errs[x].type == 4)\n\t\t\t\t\t\t\tie.push(errs[x].count);\n\t\t\t\t\t}\n\t\t\t\t\tvar data = {\n\t\t\t\t\t    labels: label,\n\t\t\t\t\t    datasets: [\n\t\t\t\t\t        $scope.getData(\"Missing Semicolon\", ms, 255, 51, 51),\n\t\t\t\t\t        $scope.getData(\"Scoping Error\", se, 192, 75, 192),\n\t\t\t\t\t        $scope.getData(\"Parenthesis Matching\", pm, 51, 255, 51),\n\t\t\t\t\t        $scope.getData(\"Initializer Error\", ie, 255, 255, 51),\n\t\t\t\t\t    ]\n\t\t\t\t\t};\n\n\t\t\t\t\tvar myLineChart = new Chart(ctx, {\n\t\t\t\t\t    type: 'line',\n\t\t\t\t\t    data: data\n\t\t\t\t\t});\n\n\t\t\t\t\tconsole.log(ms);\n\t\t\t\t\tconsole.log(se);\n\t\t\t\t\tconsole.log(pm);\n\t\t\t\t\tconsole.log(ie);\n\t\t\t\t}else{\n\t\t\t\t\tif(mode == \"single\"){\n\t\t\t\t\t\t$scope.noProgress_single = true;\n\t\t\t\t\t}else{\n\t\t\t\t\t\t$scope.noProgress_multi = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tgetErrorsCount: function(){\n\t\t\t\tuserModel.getAllErrorsCount('single')\n\t\t\t\t\t.success(function(response){\n\t\t\t\t\t\t$scope.showGraph(response, 'single');\n\t\t\t\t\t});\t\n\t\t\t\tuserModel.getAllErrorsCount('multiplayer')\n\t\t\t\t\t.success(function(response){\n\t\t\t\t\t\t$scope.showGraph(response, 'multi');\n\t\t\t\t\t});\t\n\n\t\t\t}\n\t\t});\n\n\t\t$scope.getErrorsCount();\n\n\t}]);"],"sourceRoot":"/source/"}